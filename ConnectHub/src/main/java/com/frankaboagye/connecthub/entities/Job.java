package com.frankaboagye.connecthub.entities;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.List;
import java.util.Set;

/**
 * The Job entity represents a job posting made by a company.
 * It contains details about the job, including its requirements,
 * salary, location, and associated company information.
 */
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Data
@Entity
public class Job {

    /**
     * The unique ID of the job posting.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    /**
     * The company offering the job.
     * This creates a many-to-one relationship with the Company entity.
     */
    @ManyToOne(optional = false)
    @JoinColumn(name = "company_id", nullable = false) // Foreign key column in the Job table
    private Company company;

    /**
     * The title of the job position.
     * This field gives applicants a clear understanding of the role being offered.
     */
    private String title;

    /**
     * A detailed description of the job responsibilities and requirements.
     * This should provide enough information for applicants to assess their fit for the position.
     */
    private String description;

    /**
     * The salary offered for the position.
     * This field indicates the compensation that successful candidates can expect.
     */
    private Double salary;

    /**
     * A list of required skills for the job.
     * Each skill is stored in a separate row in the job_skills table.
     */
    @ElementCollection
    @CollectionTable(name = "job_skills", joinColumns = @JoinColumn(name = "job_id"))
    @Column(name = "skill")
    private Set<String> skills;

    /**
     * The deadline for applications to the job posting.
     * This indicates the date by which applicants must submit their applications.
     */
    private LocalDate deadline;

    /**
     * The location where the job will be based.
     * This provides applicants with information on where they will be working.
     */
    private String location;

    /**
     * A more detailed field for additional information about the job posting.
     * This can be used to provide context or further details that don't fit into the description.
     */
    @Column(columnDefinition = "TEXT") // Enforce TEXT type
    private String moreInformation;

    /**
     * A list of associated labels representing the nature of the employment for the job.
     * This field helps applicants understand the work classification (e.g., Full-time, Part-time).
     */
    @ElementCollection
    @CollectionTable(name = "associated_labels", joinColumns = @JoinColumn(name = "job_id"))
    @Column(name = "label")
    private Set<String> associatedLabels;

    /**
     * A list of responsibilities associated with the job.
     * This can provide applicants with specific tasks they would be expected to perform.
     */
    @ElementCollection
    @CollectionTable(name = "job_responsibilities", joinColumns = @JoinColumn(name = "job_id"))
    @Column(name = "responsibility")
    private List<String> responsibilities;

    /**
     * A list of technology interests relevant to the job posting.
     * This field can help attract candidates with the desired technical skills and knowledge.
     */
    @ElementCollection
    @CollectionTable(name = "job_technology_interests", joinColumns = @JoinColumn(name = "job_id"))
    @Column(name = "technology_interest")
    private Set<String> technologyInterests;

    @Override
    public String toString() {
        return "Job [" + getId() + ", title=" + getTitle() + "]";
    }

}
